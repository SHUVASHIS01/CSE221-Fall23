# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1b9WJNJTeSOIaadkvgbA9OOJtB5WPfbhO

Name: Shuvashis Basak
ID: 22301769
"""

import heapq
inf = open('input1.txt', 'r')
outf = open('output1.txt', 'w')
while True:
  n,m,c,k = map(int, inf.readline().split())
  if n==0 and m==0 and c==0 and k==0:
    break
  roads= [list(map(int, inf.readline().split())) for _ in range(m)]
  rslt= min_ttl_cost(n, m, c, k, roads)
  outf.write(str(rslt)+'\n')
def min_ttl_cost(n, m, c, k, roads):
  graph= [[] for _ in range(n)]
  for i in roads:
    u, v, p= road
    graph[u].append((v,p))
    graph[v].append((u,p))
  repair_cost = dijkstra(graph, k, c-1)
  srvc_rcst= [dijkstra(graph, k, c-1) for j in range (c)]
  min_ttl_cost=float('inf')
  for i in range (c):
    ttl_cst=repair_cost[i]+ srvc_rcst[i]
    min_ttl_cost=min(min_ttl_cost, ttl_cst)
  return min_ttl_cost

def dijkstra(graph, strt, end):
  t=len(graph)
  dstnc= [float('inf')]*t
  dstnc[strt]= 0
  heap = [(0, strt)]
  while heap:
    cst, crnt = heapq.heappop(heap)
    if cst>dstnc[crnt]:
      continue
    for nhgbr, tll in graph[crnt]:
      new_cst = dstnc[crnt]+tll
      if new_cst<dstnc[nhgbr]:
        dstnc[nhgbr]= new_cst
        heapq.heappush(heap, (new_cst, nhgbr))
    return dstnc[end]