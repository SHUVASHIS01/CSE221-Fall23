# -*- coding: utf-8 -*-
"""Task6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HtrU_3J96o386ggkZzcr55BZWPr4vVhx
"""

inf = open("input6.txt", 'r')
outf = open("output6.txt", 'w')

n = int(inf.readline().strip())
data = list(map(int, (inf.readline().strip().split())))

def qck_srt(data, l, r, k):
    if l == r:
        return data[l]

    pvt = partition(data, l, r)

    if k == pvt:
        return data[pvt]
    elif k < pvt:
        return qck_srt(data, l, pvt - 1, k)
    else:
        return qck_srt(data, pvt + 1, r, k)

def partition(data, l, r):
    pvt = data[r]
    j = l - 1
    for i in range(l , r):
        if data[i] <= pvt:
            j += 1
            data[i], data[j] = data[j], data[i]
    data[j+1], data[r] = data[r], data[j+1]
    return j+1

q = int(inf.readline().strip())

for i in range(q):
    k = int(inf.readline().strip())
    kth_smallest = qck_srt(data, 0, n - 1, k - 1)
    outf.write(str(kth_smallest) + '\n')

inf.close()
outf.close()