# -*- coding: utf-8 -*-
"""Task1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-qCDcd7HPu9WDt7sxRYf-QM0vx3oIiZS
"""

import math
inf = open("input1.txt", 'r')
outf = open("output1.txt", 'w')
v, e = list(map(int, inf.readline().strip().split()))
ad_l= [[] for i in range(v+1)]
vstd = [0 for j in range(v+1)]
dist = [math.inf for k in range(v+1)]

def dijkstra(source):
    dist[source] = 0
    for i in range(1, v):
        slctd = -1
        for j in range(1, v):
            if vstd[j] == 0 and (dist[j] < dist[slctd] or slctd == -1):
                slctd = j
        vstd[slctd] = 1
        for ad_pair in ad_l[slctd]:
            if dist[ad_pair[0]] > dist[slctd] + ad_pair[1]:
                dist[ad_pair[0]] = dist[slctd] + ad_pair[1]

for i in range(e):
    f, t, w = list(map(int, inf.readline().strip().split()))
    ad_l[f].append((t, w))

src = int(inf.readline().strip())
dijkstra(src)
for i in range(1, v+1):
    if dist[i] == math.inf:
        outf.write("-1 ")
    else:
        outf.write(str(dist[i]) + " ")
inf.close()
outf.close()